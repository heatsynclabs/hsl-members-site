openapi: 3.0.3
info:
  title: HSL Members Site API
  description: API for managing HeatSync Labs members, access control, and related operations
  version: 1.0.0
servers:
  - url: http://localhost:8080
    description: Local development server

paths:
  /users/{id}:
    get:
      summary: Get a user by ID
      description: Retrieve detailed information about a specific user including their membership level, roles, orientation status, and instructor stations
      operationId: getUserById
      tags:
        - Users
      parameters:
        - name: id
          in: path
          required: true
          description: UUID of the user
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: User found successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetailed'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /users:
    get:
      summary: Get all users
      description: Retrieve a list of all users with their basic information
      operationId: getAllUsers
      tags:
        - Users
      parameters:
        - name: hidden
          in: query
          description: Filter by hidden status
          schema:
            type: boolean
        - name: limit
          in: query
          description: Maximum number of users to return
          schema:
            type: integer
            default: 100
        - name: offset
          in: query
          description: Number of users to skip
          schema:
            type: integer
            default: 0
      responses:
        '200':
          description: List of users retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  users:
                    type: array
                    items:
                      $ref: '#/components/schemas/UserSummary'
                  total:
                    type: integer
                    description: Total number of users matching the query
                  limit:
                    type: integer
                  offset:
                    type: integer

  /stations:
    get:
      summary: Get all stations
      description: Retrieve a list of all stations in the makerspace
      operationId: getAllStations
      tags:
        - Stations
      responses:
        '200':
          description: List of stations retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  stations:
                    type: array
                    items:
                      $ref: '#/components/schemas/Station'

  /stations/{id}/instructors:
    get:
      summary: Get instructors for a station
      description: Retrieve a list of all instructors certified for a specific station
      operationId: getInstructorsByStation
      tags:
        - Stations
      parameters:
        - name: id
          in: path
          required: true
          description: UUID of the station
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: List of instructors retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  stationId:
                    type: string
                    format: uuid
                  stationName:
                    type: string
                  instructors:
                    type: array
                    items:
                      $ref: '#/components/schemas/Instructor'
        '404':
          description: Station not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /cards:
    get:
      summary: Get all cards
      description: Retrieve a list of all access cards in the system
      operationId: getAllCards
      tags:
        - Cards
      parameters:
        - name: userId
          in: query
          description: Filter cards by user ID
          schema:
            type: string
            format: uuid
        - name: cardPermissions
          in: query
          description: Filter by card permission status (1 = Active, 255 = Disabled)
          schema:
            type: integer
            enum: [1, 255]
      responses:
        '200':
          description: List of cards retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  cards:
                    type: array
                    items:
                      $ref: '#/components/schemas/Card'

  /door-logs:
    get:
      summary: Get door access logs
      description: Retrieve access logs for door events and card access attempts
      operationId: getDoorLogs
      tags:
        - Door Logs
      parameters:
        - name: startDate
          in: query
          description: Filter logs from this date (ISO 8601 format)
          schema:
            type: string
            format: date-time
        - name: endDate
          in: query
          description: Filter logs until this date (ISO 8601 format)
          schema:
            type: string
            format: date-time
        - name: cardNumber
          in: query
          description: Filter by specific card number
          schema:
            type: string
        - name: userId
          in: query
          description: Filter by user ID at time of access
          schema:
            type: string
            format: uuid
        - name: eventType
          in: query
          description: Filter by event type (G = Granted, R = Read, D = Denied, or door status)
          schema:
            type: string
        - name: limit
          in: query
          description: Maximum number of logs to return
          schema:
            type: integer
            default: 100
        - name: offset
          in: query
          description: Number of logs to skip
          schema:
            type: integer
            default: 0
      responses:
        '200':
          description: List of door logs retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  logs:
                    type: array
                    items:
                      $ref: '#/components/schemas/DoorLog'
                  total:
                    type: integer
                  limit:
                    type: integer
                  offset:
                    type: integer

components:
  schemas:
    UserDetailed:
      type: object
      description: Detailed user information including relationships
      properties:
        id:
          type: string
          format: uuid
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
          format: email
        waiver:
          type: string
          format: date-time
          nullable: true
          description: Date when waiver was signed
        emergencyName:
          type: string
          nullable: true
        emergencyPhone:
          type: string
          nullable: true
        emergencyEmail:
          type: string
          format: email
          nullable: true
        paymentMethod:
          type: string
          nullable: true
        phone:
          type: string
          nullable: true
        currentSkills:
          type: string
          nullable: true
        desiredSkills:
          type: string
          nullable: true
        hidden:
          type: boolean
          nullable: true
        marketingSource:
          type: string
          nullable: true
        exitReason:
          type: string
          nullable: true
        twitterUrl:
          type: string
          nullable: true
        facebookUrl:
          type: string
          nullable: true
        githubUrl:
          type: string
          nullable: true
        websiteUrl:
          type: string
          nullable: true
        emailVisible:
          type: boolean
          nullable: true
        phoneVisible:
          type: boolean
          nullable: true
        postalCode:
          type: string
          nullable: true
        membershipLevel:
          $ref: '#/components/schemas/MembershipLevel'
          nullable: true
        roles:
          type: array
          items:
            $ref: '#/components/schemas/Role'
        orientation:
          $ref: '#/components/schemas/Orientation'
          nullable: true
          description: Orientation details if the user has been oriented
        instructorStations:
          type: array
          description: Stations where this user is an instructor
          items:
            $ref: '#/components/schemas/StationBasic'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - id
        - firstName
        - lastName
        - email
        - createdAt
        - updatedAt

    UserSummary:
      type: object
      description: Basic user information for list views
      properties:
        id:
          type: string
          format: uuid
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
          format: email
        hidden:
          type: boolean
          nullable: true
        membershipLevel:
          $ref: '#/components/schemas/MembershipLevel'
          nullable: true
        hasOrientation:
          type: boolean
          description: Whether the user has completed orientation
        createdAt:
          type: string
          format: date-time
      required:
        - id
        - firstName
        - lastName
        - email
        - hasOrientation
        - createdAt

    MembershipLevel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          description: Name of the membership level (e.g., None, Basic, Plus)
        costInCents:
          type: integer
          description: Membership cost in cents
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - id
        - name
        - costInCents
        - createdAt
        - updatedAt

    Role:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          description: Role name (e.g., admin, accountant)
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - id
        - name
        - createdAt
        - updatedAt

    Orientation:
      type: object
      properties:
        orientedById:
          type: string
          format: uuid
          description: User ID of the person who conducted the orientation
        orientedByName:
          type: string
          description: Full name of the person who conducted the orientation
        createdAt:
          type: string
          format: date-time
          description: Date when orientation was completed
        updatedAt:
          type: string
          format: date-time
      required:
        - orientedById
        - orientedByName
        - createdAt
        - updatedAt

    Station:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        instructorCount:
          type: integer
          description: Number of instructors certified for this station
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - id
        - name
        - instructorCount
        - createdAt
        - updatedAt

    StationBasic:
      type: object
      description: Basic station information without counts
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
      required:
        - id
        - name

    Instructor:
      type: object
      properties:
        userId:
          type: string
          format: uuid
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
          format: email
        certifiedAt:
          type: string
          format: date-time
          description: Date when the instructor was certified for this station
      required:
        - userId
        - firstName
        - lastName
        - email
        - certifiedAt

    Card:
      type: object
      properties:
        id:
          type: string
          format: uuid
        cardNumber:
          type: string
          nullable: true
        cardPermissions:
          type: integer
          description: Card permission status (1 = Active, 255 = Disabled)
          enum: [1, 255]
          nullable: true
        userId:
          type: string
          format: uuid
          description: User to whom this card is assigned, if assigned
          nullable: true
        userName:
          type: string
          description: Full name of the user assigned to this card, if assigned
          nullable: true
        name:
          type: string
          nullable: true
          description: Label/name for the card in the system
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - id
        - createdAt
        - updatedAt

    DoorLog:
      type: object
      properties:
        id:
          type: string
          format: uuid
        cardNumber:
          type: string
          nullable: true
          description: Card number used for access attempt (null for door events)
        key:
          type: string
          description: Event type (G = Granted, R = Read, D = Denied, or door status like door_1_locked or door_1_locked)
        data:
          type: integer
          description: Door status (0 = Unlocked, 1 = Locked) for door events, or card number for access attempts (I think)
        userIdWhenAccessed:
          type: string
          format: uuid
          nullable: true
          description: User ID at the time of access (preserved even if card is reassigned)
        userName:
          type: string
          nullable: true
          description: Name of the user at time of access
        createdAt:
          type: string
          format: date-time
          description: When the log entry was created
        updatedAt:
          type: string
          format: date-time
      required:
        - id
        - key
        - data
        - createdAt
        - updatedAt

    Error:
      type: object
      properties:
        reason:
          type: string
          description: Error message
      required:
        - error

tags:
  - name: Users
    description: Operations related to user management
  - name: Stations
    description: Operations related to makerspace stations
  - name: Cards
    description: Operations related to access cards
  - name: Door Logs
    description: Operations related to door access logs
